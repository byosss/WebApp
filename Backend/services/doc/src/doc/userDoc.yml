openapi: 3.0.0
info:
  title: User API
  version: 1.0.0

paths:
  /api/users/login:
    post:
      tags:
        - Users
      description: Authenticate a user and generate JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Successful login
        '401':
          description: Invalid credentials
        '500':
          description: Server Error

  /api/users/register:
    post:
      tags:
        - Users
      description: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            examples:
              client:
                summary: Register as a 'client'
                value:
                  firstName: John
                  lastName: Doe
                  email: client@example.com
                  password: client_password
                  role: client
              comm:
                summary: Register as a 'comm'
                value:
                  email: comm@example.com
                  password: comm_password
                  role: comm
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Validation error or email already used
        '500':
          description: Server Error

  /api/users:
    get:
      tags:
        - Users
      description: Retrieves all users registered in the system (accessible only to users with 'comm' role).
      responses:
        '200':
          description: List of users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: User ID
                    email:
                      type: string
                      description: User email address
                    role:
                      type: string
                      description: User role
                  example:
                    - _id: "6123456789abcdef01234567"
                      email: "user1@example.com"
                      role: "client"
                    - _id: "7123456789abcdef01234568"
                      email: "user2@example.com"
                      role: "comm"
        '403':
          description: Not authorized to access this route
        '500':
          description: Server Error

  /api/users/{id}:
    get:
      tags:
        - Users
      description: Retrieves details of a specific user based on the provided ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the user to retrieve
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    description: User ID
                  email:
                    type: string
                    description: User email address
                  role:
                    type: string
                    description: User role
                example:
                  _id: "6123456789abcdef01234567"
                  email: "user1@example.com"
                  role: "client"
        '403':
          description: Not authorized to access this route
        '404':
          description: User not found
        '500':
          description: Server error
    patch:
      tags:
        - Users
      description: Update details of a specific user based on the provided ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                email:
                  type: string
                  format: email
                  example: user@example.com
                password:
                  type: string
                  example: newpassword123
      responses:
        '200':
          description: User updated successfully
        '403':
          description: Not authorized to access this route
        '404':
          description: User not found
        '500':
          description: Server error
    delete:
      tags:
        - Users
      description: Delete a specific user based on the provided ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: ID of the user to delete
      responses:
        '200':
          description: User deleted successfully
        '403':
          description: Not authorized to access this route
        '404':
          description: User not found
        '500':
          description: Server error

  /api/users/{userId}/cast:
    post:
      tags:
        - Users/Cast
      description: Add a cast item for a specific user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID of the user to add a cast item for
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                itemId:
                  type: string
                  example: 60c46b4ee93a9e0015b4bc70
                description:
                  type: string
                  example: "Cast item description"
      responses:
        '201':
          description: Cast item added successfully
        '500':
          description: Server error
    get:
      tags:
        - Users/Cast
      description: Get all cast items for a specific user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID of the user to retrieve cast items for
      responses:
        '200':
          description: List of cast items retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: 60c46b4ee93a9e0015b4bc70
                    description:
                      type: string
                      example: "Cast item description"
        '404':
          description: Cast items not found
        '500':
          description: Server error
    delete:
      tags:
        - Users/Cast
      description: Delete all cast items for a specific user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID of the user to delete cast items for
      responses:
        '200':
          description: All cast items deleted successfully
        '404':
          description: Cast items not found
        '500':
          description: Server error

  /api/users/{userId}/cast/{itemId}:
    delete:
      tags:
        - Users/Cast
      description: Delete a specific cast item for a user
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID of the user to delete the cast item for
        - in: path
          name: itemId
          required: true
          schema:
            type: string
          description: ID of the cast item to delete
      responses:
        '200':
          description: Cast item deleted successfully
        '404':
          description: Cast item not found
        '500':
          description: Server error
